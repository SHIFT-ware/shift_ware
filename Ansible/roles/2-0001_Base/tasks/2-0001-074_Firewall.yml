---
- name: 2-0001-074_Firewall - set tmp variable
  set_fact:
    firewall: "{{ base_NETWORK.firewall }}"

- name: 2-0001-074_Firewall - check required parameter is set
  fail:
    msg: "required params is not defined"
  when:
    - not firewall | has_nested_keys('domain', 'enabled_flag') or
      not firewall | has_nested_keys('private', 'enabled_flag')  or
      not firewall | has_nested_keys('public', 'enabled_flag')

- name: 2-0001-074_Firewall - check firewall enabled status
  raw: Write-Host -NoNewline (Get-NetFirewallProfile -Name '{{ item.name }}').Enabled
  register: ret_pre
  changed_when: ret_pre.stdout != "{{ item.enable }}"
  always_run: yes
  with_items:
    - name: Domain
      enable: "{{ firewall.domain.enabled_flag }}"
    - name: Private
      enable: "{{ firewall.private.enabled_flag }}"
    - name: Public
      enable: "{{ firewall.public.enabled_flag }}"

- name: 2-0001-074_Firewall - set firewall enabled status
  raw: Set-NetFirewallProfile -Name '{{ item.item.name }}' -Enabled '{{ item.item.enable }}'
  always_run: no
  when: item.stdout != item.item.enable 
  with_items: "{{ ret_pre.results }}"

- name: 2-0001-074_Firewall - post check firewall enabled status
  raw: Write-Host -NoNewline (Get-NetFirewallProfile -Name '{{ item.item.name }}').Enabled
  register: ret_post
  failed_when: ret_post.stdout != "{{ item.item.enable }}"
  always_run: no
  when: item.stdout != item.item.enable
  with_items: "{{ ret_pre.results }}"

